Subject: Don't die on missing directories
Author: Justin Pryzby <justinpryzby@users.sourceforge.net>
Last-Update: 2010-04-19

cron shouldn't just die when it encounters missing dirs.

Bug-Debian: http://bugs.debian.org/470564

Acked-by: Christian Kastner <debian@kvr.at>
Index: patched/database.c
===================================================================
--- patched.orig/database.c	2010-05-06 18:18:52.595435667 +0200
+++ patched/database.c	2010-05-06 18:19:01.607560756 +0200
@@ -78,13 +78,15 @@
 	 */
 	if (stat(SPOOL_DIR, &statbuf) < OK) {
 		log_it("CRON", getpid(), "STAT FAILED", SPOOL_DIR);
-		(void) exit(ERROR_EXIT);
+		statbuf.st_mtime = 0;
 	}
 
 	/* track system crontab file
 	 */
-	if (stat(SYSCRONTAB, &syscron_stat) < OK)
+	if (stat(SYSCRONTAB, &syscron_stat) < OK) {
+		log_it("CRON", getpid(), "STAT FAILED", SYSCRONTAB);
 		syscron_stat.st_mtime = 0;
+	}
 
 #ifdef DEBIAN
 	/* Check mod time of SYSCRONDIR. This won't tell us if a file
@@ -93,7 +95,7 @@
 	 */
 	if (stat(SYSCRONDIR, &syscrond_stat) < OK) {
 		log_it("CRON", getpid(), "STAT FAILED", SYSCRONDIR);
-		(void) exit(ERROR_EXIT);
+		syscrond_stat.st_mtime = 0;
 	}
 
 	/* If SYSCRONDIR was modified, we know that something is changed and
@@ -175,10 +177,9 @@
 	/* Read all the package crontabs. */
 	if (!(dir = opendir(SYSCRONDIR))) {
 		log_it("CRON", getpid(), "OPENDIR FAILED", SYSCRONDIR);
-		(void) exit(ERROR_EXIT);
 	}
 
-	while (NULL != (dp = readdir(dir))) {
+	while (dir != NULL && NULL != (dp = readdir(dir))) {
 		char	fname[MAXNAMLEN+1],
 		        tabname[PATH_MAX+1];
 
@@ -208,7 +209,8 @@
 				&statbuf, &new_db, old_db);
 
 	}
-	closedir(dir);
+	if (dir)
+		closedir(dir);
 #endif
 
 	/* we used to keep this dir open all the time, for the sake of
@@ -217,10 +219,9 @@
 	 */
 	if (!(dir = opendir(SPOOL_DIR))) {
 		log_it("CRON", getpid(), "OPENDIR FAILED", SPOOL_DIR);
-		(void) exit(ERROR_EXIT);
 	}
 
-	while (NULL != (dp = readdir(dir))) {
+	while (dir != NULL && NULL != (dp = readdir(dir))) {
 		char	fname[MAXNAMLEN+1],
 			tabname[PATH_MAX+1];
 
@@ -238,7 +239,8 @@
 		process_crontab(fname, fname, tabname,
 				&statbuf, &new_db, old_db);
 	}
-	closedir(dir);
+	if (dir)
+		closedir(dir);
 
 	/* if we don't do this, then when our children eventually call
 	 * getpwnam() in do_command.c's child_process to verify MAILTO=,
