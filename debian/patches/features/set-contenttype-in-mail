Subject: Set ContentType: header in emails
Origin: vendor,Fedora Core

Set the ContentType: header based on the system locale or cron's evironment,
if available.

Bug-Debian: http://bugs.debian.org/338051
Bug-Debian: http://bugs.debian.org/309150
Index: patched/cron.c
===================================================================
--- patched.orig/cron.c	2010-05-06 18:18:53.954560978 +0200
+++ patched/cron.c	2010-05-06 18:18:54.665561020 +0200
@@ -63,6 +63,7 @@
 	char	*argv[];
 {
 	cron_db	database;
+	char *cs;
 
 	ProgramName = argv[0];
 
@@ -95,6 +96,19 @@
 	setenv("PATH", _PATH_DEFPATH, 1);
 #endif
 
+       /* Get the default locale character set for the mail
+        * "Content-Type: ...; charset=" header
+        */
+       setlocale(LC_ALL,""); /* set locale to system defaults or to
+                                that specified by any  LC_* env vars */
+       /* Except that "US-ASCII" is preferred to "ANSI_x3.4-1968" in MIME,
+        * even though "ANSI_x3.4-1968" is the official charset name. */
+       if ( ( cs = nl_langinfo( CODESET ) ) != 0L && 
+               strcmp(cs, "ANSI_x3.4-1968") != 0 )
+           strncpy( cron_default_mail_charset, cs, MAX_ENVSTR );
+       else
+           strcpy( cron_default_mail_charset, "US-ASCII" );
+
 	/* if there are no debug flags turned on, fork as a daemon should.
 	 */
 # if DEBUGGING
Index: patched/cron.h
===================================================================
--- patched.orig/cron.h	2010-05-06 18:18:51.094436073 +0200
+++ patched/cron.h	2010-05-06 18:18:54.665561020 +0200
@@ -292,6 +292,8 @@
 
 int     lsbsysinit_mode;
 
+char    cron_default_mail_charset[MAX_ENVSTR] = "";
+
 # if DEBUGGING
 int	DebugFlags;
 char	*DebugFlagNames[] = {	/* sync with #defines */
@@ -310,6 +312,7 @@
 extern  time_min timeRunning;
 extern  time_min virtualTime;
 extern  time_min clockTime;
+extern  char     cron_default_mail_charset[MAX_ENVSTR];
 # if DEBUGGING
 extern	int	DebugFlags;
 extern	char	*DebugFlagNames[];
Index: patched/externs.h
===================================================================
--- patched.orig/externs.h	2010-05-06 18:18:22.672435408 +0200
+++ patched/externs.h	2010-05-06 18:18:54.665561020 +0200
@@ -26,6 +26,11 @@
 # define WAIT_IS_INT 1
 extern char *tzname[2];
 # define TZONE(tm) tzname[(tm).tm_isdst]
+/* include locale stuff for mailer "Content-Type":
+ */
+#include <locale.h>
+#include <nl_types.h>
+#include <langinfo.h>
 #endif
 
 #if defined(UNIXPC)
Index: patched/do_command.c
===================================================================
--- patched.orig/do_command.c	2010-05-06 18:18:51.094436073 +0200
+++ patched/do_command.c	2010-05-06 18:18:54.665561020 +0200
@@ -486,8 +486,12 @@
 
 			if (mailto) {
 				register char	**env;
+                        	char    **jobenv = build_env(e->envp); 
 				auto char	mailcmd[MAX_COMMAND];
 				auto char	hostname[MAXHOSTNAMELEN];
+				char    *content_type = env_get("CONTENT_TYPE",jobenv),
+					*content_transfer_encoding = env_get("CONTENT_TRANSFER_ENCODING",jobenv);
+
 
 				(void) gethostname(hostname, MAXHOSTNAMELEN);
 				(void) snprintf(mailcmd, sizeof(mailcmd),
@@ -505,6 +509,36 @@
 				fprintf(mail, "Date: %s\n",
 					arpadate(&StartTime));
 # endif /* MAIL_DATE */
+                               if ( content_type == 0L ) {
+                                       fprintf(mail, "Content-Type: text/plain; charset=%s\n",
+                                               cron_default_mail_charset
+                                              );
+                               } else {   
+				    /* user specified Content-Type header.
+				     * disallow new-lines for security reasons
+				     * (else users could specify arbitrary mail headers!)
+				     */
+				       char *nl=content_type;
+                                       size_t ctlen = strlen(content_type);
+
+                                       while(  (*nl != '\0')
+                                            && ((nl=strchr(nl,'\n')) != 0L)
+                                            && (nl < (content_type+ctlen))
+                                            ) *nl = ' ';
+                                       fprintf(mail,"Content-Type: %s\n", content_type);
+                               }
+                               if ( content_transfer_encoding != 0L ) {
+                                       char *nl=content_transfer_encoding;
+                                       size_t ctlen = strlen(content_transfer_encoding);
+                                       while(  (*nl != '\0')
+                                            && ((nl=strchr(nl,'\n')) != 0L)
+                                            && (nl < (content_transfer_encoding+ctlen))
+                                            ) *nl = ' ';
+
+                                       fprintf(mail,"Content-Transfer-Encoding: %s\n", content_transfer_encoding);
+                               }
+
+
 				for (env = e->envp;  *env;  env++)
 					fprintf(mail, "X-Cron-Env: <%s>\n",
 						*env);
