Subject: Proper handling of @reboot entries
Last-Update: 2010-04-11

cron runs @reboot jobs on restart instead of on reboot. Fix this.

http://bugs.debian.org/74762
http://bugs.debian.org/77563

Acked-by: Christian Kastner <debian@kvr.at>
Index: patched/cron.c
===================================================================
--- patched.orig/cron.c	2010-05-06 18:18:51.095435790 +0200
+++ patched/cron.c	2010-05-06 18:18:53.954560978 +0200
@@ -255,6 +255,10 @@
 	}
 }
 
+#ifdef DEBIAN
+#include <sys/stat.h>
+#include <fcntl.h>
+#endif
 
 static void
 run_reboot_jobs(db)
@@ -262,7 +266,31 @@
 {
 	register user		*u;
 	register entry		*e;
+    int rbfd;
+#ifdef DEBIAN
+#define REBOOT_FILE "/var/run/crond.reboot"
+	/* Run on actual reboot, rather than cron restart */
+	if (access(REBOOT_FILE, F_OK) == 0) {
+	        /* File exists, return */
+     	        log_it("CRON", getpid(),"INFO",
+		       "Skipping @reboot jobs -- not system startup");
+	        return;
+	}
+	/* Create the file */
+	if ((rbfd = creat(REBOOT_FILE, S_IRUSR&S_IWUSR)) < 0) {
+		/* Bad news, bail out */
+	        log_it("CRON",getpid(),"DEATH","Can't create reboot check file");
+		exit(0);
+	} else {
+		close(rbfd);
+		log_it("CRON", getpid(),"INFO", "Running @reboot jobs");
+	}
+      
 
+        Debug(DMISC, ("[%d], Debian running reboot jobs\n",getpid()));
+    
+#endif
+        Debug(DMISC, ("[%d], vixie running reboot jobs\n", getpid()));
 	for (u = db->head;  u != NULL;  u = u->next) {
 		for (e = u->crontab;  e != NULL;  e = e->next) {
 			if (e->flags & WHEN_REBOOT) {
