Index: patched/crontab.1
===================================================================
--- patched.orig/crontab.1	2010-05-06 18:17:51.441435609 +0200
+++ patched/crontab.1	2010-05-06 18:19:05.363435648 +0200
@@ -17,40 +17,54 @@
 .\"
 .\" $Id: crontab.1,v 2.4 1993/12/31 10:47:33 vixie Exp $
 .\"
-.TH CRONTAB 1 "29 December 1993"
+.TH CRONTAB 1 "19 April 2010"
 .UC 4
 .SH NAME
-crontab \- maintain crontab files for individual users (V3)
+crontab \- maintain crontab files for individual users (Vixie Cron)
 .SH SYNOPSIS
 crontab [ -u user ] file
 .br
-crontab [ -u user ] { -l | -r | -e }
+crontab [ -u user ] [ -i ] { -e | -l | -r }
 .SH DESCRIPTION
-.I Crontab
+.I crontab
 is the program used to install, deinstall or list the tables
 used to drive the
 .IR cron (8)
 daemon in Vixie Cron.  Each user can have their own crontab, and though
-these are files in /var, they are not intended to be edited directly.
+these are files in /var/spool/cron/crontabs,
+they are not intended to be edited directly.
 .PP
 If the
-.I allow
-file exists, then you must be listed therein in order to be allowed to use
-this command.  If the
-.I allow
+.I /etc/cron.allow
+file exists, then you must be listed (one user per line) therein in order to be
+allowed to use this command.  If the
+.I /etc/cron.allow
 file does not exist but the
-.I deny
+.I /etc/cron.deny
 file does exist, then you must \fBnot\fR be listed in the
-.I deny
-file in order to use this command.  If neither of these files exists, then
-depending on site-dependent configuration parameters, only the super user
-will be allowed to use this command, or all users will be able to use this
-command.
+.I /etc/cron.deny
+file in order to use this command. 
+.PP
+If neither of these files exists, then depending on site-dependent
+configuration parameters, only the super user will be allowed to use this
+command, or all users will be able to use this command. 
+.PP
+If both files exist then 
+.I /etc/cron.allow
+takes precendence. Which means that 
+.I /etc/cron.deny
+is not considered and your user must be listed in 
+.I /etc/cron.allow
+in order to be able to use the crontab.
+.PP
+Regardless of the existance of any of these files, the root administrative
+user is always allowed to setup a crontab.  For standard Debian systems, all
+users may use this command.
 .PP
 If the
 .I -u
 option is given, it specifies the name of the user whose crontab is to be
-tweaked.  If this option is not given,
+used (when listing) or modified (when editing). If this option is not given,
 .I crontab
 examines "your" crontab, i.e., the crontab of the person executing the
 command.  Note that
@@ -58,7 +72,7 @@
 can confuse
 .I crontab
 and that if you are running inside of
-.IR su (8)
+.IR su (8) 
 you should always use the
 .I -u
 option for safety's sake.
@@ -68,7 +82,10 @@
 .PP
 The
 .I -l
-option causes the current crontab to be displayed on standard output.
+option causes the current crontab to be displayed on standard output. See
+the note under 
+.B DEBIAN SPECIFIC
+below.
 .PP
 The
 .I -r
@@ -77,24 +94,69 @@
 The
 .I -e
 option is used to edit the current crontab using the editor specified by
-the \s-1VISUAL\s+1 or \s-1EDITOR\s+1 environment variables.  After you exit
-from the editor, the modified crontab will be installed automatically.
+the \s-1VISUAL\s+1 or \s-1EDITOR\s+1 environment variables.
+After you exit
+from the editor, the modified crontab will be installed automatically. If
+neither of the environment variables is defined, then the
+default editor /usr/bin/editor is used.
+.PP
+The
+.I -i
+option modifies the -r option to prompt the user for a 'y/Y' response
+before actually removing the crontab.
+.SH DEBIAN SPECIFIC
+The "out-of-the-box" behaviour for
+.I crontab -l
+is to display the three line "DO NOT EDIT THIS FILE" header 
+that is placed at the
+beginning of the crontab when it is installed. The problem is that
+it makes the sequence
+.PP
+crontab -l | crontab -
+.PP
+non-idempotent -- you keep adding copies of the header. This causes
+pain to scripts that use sed to edit a crontab. Therefore, the default
+behaviour of the 
+.B -l
+option has been changed to not output such header. You may obtain the
+original behaviour by setting the environment variable 
+.B CRONTAB_NOHEADER
+to 'N', which will cause the
+.I crontab -l
+command to emit the extraneous header.
 .SH "SEE ALSO"
 crontab(5), cron(8)
 .SH FILES
 .nf
-/var/cron/allow
-/var/cron/deny
+/etc/cron.allow
+/etc/cron.deny
+/var/spool/cron/crontabs
 .fi
+.PP
+There is one file for each user's crontab under the /var/spool/cron/crontabs
+directory. Users are not allowed to edit the files under that directory
+directly to ensure that only users allowed by the system to run periodic tasks
+can add them, and only syntactically correct crontabs will be written there.
+This is enforced by having the directory writable only by the
+.I crontab
+group and configuring
+.I crontab
+command with the setgid bid set for that specific group.
 .SH STANDARDS
 The
 .I crontab
 command conforms to IEEE Std1003.2-1992 (``POSIX'').  This new command syntax
 differs from previous versions of Vixie Cron, as well as from the classic
 SVR3 syntax.
+
 .SH DIAGNOSTICS
 A fairly informative usage message appears if you run it with a bad command
 line.
+
+cron requires that each entry in a crontab end in a newline character. If the
+last entry in a crontab is missing the newline, cron will consider the crontab
+(at least partially) broken and refuse to install it.
+
 .SH AUTHOR
 .nf
 Paul Vixie <paul@vix.com>
